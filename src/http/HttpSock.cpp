/*
 * Copyright (C) 2018  Bal Chettri
 * Licensed under GNU GPL(https://www.gnu.org/licenses/gpl.html)
 */
#include <http/HttpSock.h>

namespace http
{

#ifdef HTTP_DEBUG
const char *socketerrordesc(int errcode)
{    
    #define CHECK_ERR(_ERR) \
    case _ERR: return #_ERR;

#ifdef HTTP_PLATFORM_WIN
    switch(errcode)
    {
        CHECK_ERR(WSA_INVALID_HANDLE)
        CHECK_ERR(WSA_NOT_ENOUGH_MEMORY)
        CHECK_ERR(WSA_INVALID_PARAMETER)
        CHECK_ERR(WSA_OPERATION_ABORTED)
        CHECK_ERR(WSA_IO_INCOMPLETE)
        CHECK_ERR(WSA_IO_PENDING)
        CHECK_ERR(WSAEINTR)
        CHECK_ERR(WSAEBADF)
        CHECK_ERR(WSAEACCES)
        CHECK_ERR(WSAEFAULT)
        CHECK_ERR(WSAEINVAL)
        CHECK_ERR(WSAEMFILE)
        CHECK_ERR(WSAEWOULDBLOCK)
        CHECK_ERR(WSAEINPROGRESS)
        CHECK_ERR(WSAEALREADY)
        CHECK_ERR(WSAENOTSOCK)
        CHECK_ERR(WSAEDESTADDRREQ)
        CHECK_ERR(WSAEMSGSIZE)
        CHECK_ERR(WSAEPROTOTYPE)
        CHECK_ERR(WSAENOPROTOOPT)
        CHECK_ERR(WSAEPROTONOSUPPORT)
        CHECK_ERR(WSAESOCKTNOSUPPORT)
        CHECK_ERR(WSAEOPNOTSUPP)
        CHECK_ERR(WSAEPFNOSUPPORT)
        CHECK_ERR(WSAEAFNOSUPPORT)
        CHECK_ERR(WSAEADDRINUSE)
        CHECK_ERR(WSAEADDRNOTAVAIL)
        CHECK_ERR(WSAENETDOWN)
        CHECK_ERR(WSAENETUNREACH)
        CHECK_ERR(WSAENETRESET)
        CHECK_ERR(WSAECONNABORTED)
        CHECK_ERR(WSAECONNRESET)
        CHECK_ERR(WSAENOBUFS)
        CHECK_ERR(WSAEISCONN)
        CHECK_ERR(WSAENOTCONN)
        CHECK_ERR(WSAESHUTDOWN)
        CHECK_ERR(WSAETOOMANYREFS)
        CHECK_ERR(WSAETIMEDOUT)
        CHECK_ERR(WSAECONNREFUSED)
        CHECK_ERR(WSAELOOP)
        CHECK_ERR(WSAENAMETOOLONG)
        CHECK_ERR(WSAEHOSTDOWN)
        CHECK_ERR(WSAEHOSTUNREACH)
        CHECK_ERR(WSAENOTEMPTY)
        CHECK_ERR(WSAEPROCLIM)
        CHECK_ERR(WSAEUSERS)
        CHECK_ERR(WSAEDQUOT)
        CHECK_ERR(WSAESTALE)
        CHECK_ERR(WSAEREMOTE)
        CHECK_ERR(WSASYSNOTREADY)
        CHECK_ERR(WSAVERNOTSUPPORTED)
        CHECK_ERR(WSANOTINITIALISED)
        CHECK_ERR(WSAEDISCON)
        CHECK_ERR(WSAENOMORE)
        CHECK_ERR(WSAECANCELLED)
        CHECK_ERR(WSAEINVALIDPROCTABLE)
        CHECK_ERR(WSAEINVALIDPROVIDER)
        CHECK_ERR(WSAEPROVIDERFAILEDINIT)
        CHECK_ERR(WSASYSCALLFAILURE)
        CHECK_ERR(WSASERVICE_NOT_FOUND)
        CHECK_ERR(WSATYPE_NOT_FOUND)
        CHECK_ERR(WSA_E_NO_MORE)
        CHECK_ERR(WSA_E_CANCELLED)
        CHECK_ERR(WSAEREFUSED)
        CHECK_ERR(WSAHOST_NOT_FOUND)
        CHECK_ERR(WSATRY_AGAIN)
        CHECK_ERR(WSANO_RECOVERY)
        CHECK_ERR(WSANO_DATA)
        CHECK_ERR(WSA_QOS_RECEIVERS)
        CHECK_ERR(WSA_QOS_SENDERS)
        CHECK_ERR(WSA_QOS_NO_SENDERS)
        CHECK_ERR(WSA_QOS_NO_RECEIVERS)
        CHECK_ERR(WSA_QOS_REQUEST_CONFIRMED)
        CHECK_ERR(WSA_QOS_ADMISSION_FAILURE)
        CHECK_ERR(WSA_QOS_POLICY_FAILURE)
        CHECK_ERR(WSA_QOS_BAD_STYLE)
        CHECK_ERR(WSA_QOS_BAD_OBJECT)
        CHECK_ERR(WSA_QOS_TRAFFIC_CTRL_ERROR)
        CHECK_ERR(WSA_QOS_GENERIC_ERROR)
        CHECK_ERR(WSA_QOS_ESERVICETYPE)
        CHECK_ERR(WSA_QOS_EFLOWSPEC)
        CHECK_ERR(WSA_QOS_EPROVSPECBUF)
        CHECK_ERR(WSA_QOS_EFILTERSTYLE)
        CHECK_ERR(WSA_QOS_EFILTERTYPE)
        CHECK_ERR(WSA_QOS_EFILTERCOUNT)
        CHECK_ERR(WSA_QOS_EOBJLENGTH)
        CHECK_ERR(WSA_QOS_EFLOWCOUNT)
        CHECK_ERR(WSA_QOS_EUNKOWNPSOBJ)
        CHECK_ERR(WSA_QOS_EPOLICYOBJ)
        CHECK_ERR(WSA_QOS_EFLOWDESC)
        CHECK_ERR(WSA_QOS_EPSFLOWSPEC)
        CHECK_ERR(WSA_QOS_EPSFILTERSPEC)
        CHECK_ERR(WSA_QOS_ESDMODEOBJ)
        CHECK_ERR(WSA_QOS_ESHAPERATEOBJ)
        CHECK_ERR(WSA_QOS_RESERVED_PETYPE)
    }
#endif
    return "Unknown";

    #undef CHECK_ERR
}
#endif // HTTP_DEBUG

} // Http namespace
